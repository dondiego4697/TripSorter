{"version":3,"sources":["../../src/main.js"],"names":["Main","req","Promise","resolve","reject","getBody","then","cards","JSON","parse","body","err","toString","sort","on","chunk","push","Buffer","concat"],"mappings":";;;;;;qjBAAA;;;;AAIA;;;;;;;;IAEqBA,I;AACjB,oBAAc;AAAA;AAEb;;AAED;;;;;;;;;gCAKQC,G,EAAK;AAAA;;AACT,mBAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,sBAAKC,OAAL,CAAaJ,GAAb,EAAkBK,IAAlB,CAAuB,gBAAQ;AAC3B,wBAAIC,QAAQ,qBAAZ;AACA,wBAAI;AACAA,gCAAQC,KAAKC,KAAL,CAAWC,IAAX,CAAR;AACH,qBAFD,CAEE,OAAOC,GAAP,EAAY;AACVP,+BAAOO,IAAIC,QAAJ,EAAP;AACH;AACDL,0BAAMM,IAAN;AACH,iBARD;AASH,aAVM,CAAP;AAWH;;AAED;;;;;;;;gCAKQZ,G,EAAK;AACT,gBAAIS,OAAO,EAAX;AACA,mBAAO,IAAIR,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC5BF,oBAAIa,EAAJ,CAAO,MAAP,EAAe,UAAUC,KAAV,EAAiB;AAC5BL,yBAAKM,IAAL,CAAUD,KAAV;AACH,iBAFD,EAEGD,EAFH,CAEM,KAFN,EAEa,YAAY;AACrBJ,2BAAOO,OAAOC,MAAP,CAAcR,IAAd,EAAoBE,QAApB,EAAP;AACAT,4BAAQO,KAAKE,QAAL,EAAR;AACH,iBALD;AAMH,aAPM,CAAP;AAQH;;;;;;kBAvCgBZ,I","file":"main.js","sourcesContent":["/**\r\n * Created by Denis on 30.03.2017.\r\n */\r\n\r\nimport Cards from './objects/cards';\r\n\r\nexport default class Main {\r\n    constructor() {\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Object} req запрос\r\n     * @return Promise resolve - {String}, reject - {String}\r\n     */\r\n    analyse(req) {\r\n        return new Promise((resolve, reject) => {\r\n            this.getBody(req).then(body => {\r\n                let cards = new Cards();\r\n                try {\r\n                    cards = JSON.parse(body);\r\n                } catch (err) {\r\n                    reject(err.toString());\r\n                }\r\n                cards.sort();\r\n            })\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Метод достает тело запроса\r\n     * @param req\r\n     * @return {Promise} resolve - {String} тело запроса\r\n     */\r\n    getBody(req) {\r\n        let body = [];\r\n        return new Promise((resolve) => {\r\n            req.on('data', function (chunk) {\r\n                body.push(chunk);\r\n            }).on('end', function () {\r\n                body = Buffer.concat(body).toString();\r\n                resolve(body.toString());\r\n            });\r\n        });\r\n    }\r\n}"]}